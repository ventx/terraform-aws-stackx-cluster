about: |
  > Plan and simple Terraform cluster module which deploys Kubernetes (EKS) clusters to AWS.
  > Supports control-plane logs ingested to CloudWatch via KMS encryption.
  > Creates an IAM OIDC provider to be used with EKS IRSA. -- Part of stackx.

builtwith: |
  > Technologies that are used in this project.
  > [AWS](https://aws.amazon.com)
  > [Terraform](https://www.terraform.io)
  > [Terratest](https://terratest.gruntwork.io)

owner: hajowieland

prerequisites:
  - AWS credentials
  - Terraform
  - '[VPC network and subnets](https://github.com/ventx/stackx-terraform-aws-network)'

quickstart: |
  To get started, clone the projects, check all configurable [Inputs](#inputs) and deploy everything with `make`.

  ```shell
  git clone https://github.com/ventx/stackx-terraform-aws-cluster.git
  make all # init, validate, plan, apply
  ```

usage: |

  You can run this module in conjunction with other stackx components (recommended) or as single-use (build your own).

  Deployment time around: 12 minutes
  ```shell
    make apply  2.98s user 0.83s system 0% cpu 12:11.53 total
  ```

  ### stackx (RECOMMENDED)

  This is just a bare minimum example of how to use the module.
  See all available stackx modules here: https://github.com/ventx


  ```hcl
    module "aws-network" {
      source = "ventx/stackx-network/aws"
      version     = "0.1.0"
    }

    module "aws-cluster" {
      source          = "ventx/stackx-cluster/aws"
      version         = "0.1.0" // Pinned and tested version, generated by {x-release-please-version}
      cluster_version = "1.23"
      subnet_ids      = module.aws_network.private_subnet_ids
    }
  ```

  ### Single-Use

  ```hcl
    module "aws-cluster" {
      source = "ventx/stackx-cluster/aws"
      version     = "0.1.0" // Pinned and tested version, generated by {x-release-please-version}
      cluster_version = "1.22"
      subnet_ids = ["subnet-1", "subnet-2", "subnet-3"]
    }
  ```


terraform: ""

features:
  - "Simple and easy to use, just the bare minimum"
  - Control-Plan logs ingested to CloudWatch via KMS encryption
  - IAM OIDC provider to be used with EKS IRSA

resources:
  - EKS
  - IAM OIDC provider
  - SecurityGroup
  - SecurityGroup rules
  - KMS Key
  - KMS Key Alias


imageFile1: screenshot1.png

imageFile2: screenshot2.png

imageDesc1: Placeholder

imageDesc2: Rover
